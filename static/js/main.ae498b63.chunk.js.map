{"version":3,"sources":["config/fire.js","Views/MainView/MainView.js","config/mail.js","App.js","serviceWorker.js","index.js","assets/img/HSB_sponsorlogo.png"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","promisify","require","MainView","React","useState","name","phone","email","time","status","inputList","setInputList","alertSucess","setalertSucess","checked","setChecked","enableButton","setenableButton","storageStatus","setstorageStatus","ExternalStorageStatus","setExternalStorageStatus","setTime","simpComfDia","setsimpComfDia","useEffect","VerifyButton","StorageStatus","timeToList","length","sleep","setTimeout","AlertBoxSuccess","props","Dialog","open","aria-labelledby","aria-describedby","className","style","color","DialogContent","List","map","x","i","t","ListItem","key","ListItemIcon","ListItemText","primary","Grid","container","direction","justify","alignItems","DialogActions","Button","onClick","AlertBoxSuccessHandler","variant","dispatchToDatabase","autoFocus","forEach","e","firestore","collection","doc","set","err","console","log","list","axios","post","headers","Authorization","then","res","SimpleConfirmationDialog","marginLeft","marginRight","Icon","fontSize","margin","marginTop","marginBottom","backgroundColor","sucessHandler","window","location","replace","onSnapshot","documentSnapshot","size","left","leftExt","handleInputChange","index","targ","target","value","test","event","handleRemoveClick","splice","handleAddClick","il","element","includes","string","item","xs","sm","md","TextField","onChange","label","InputLabel","id","Select","labelId","MenuItem","Checkbox","inputProps","flex","textAlign","disabled","src","Logo","alt","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ae498b63.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyBqaan7l7Fezfeb3ShpSrweCvBhpEN1_TI',\n  authDomain: 'registringsapp.firebaseapp.com',\n  databaseURL: 'https://registringsapp.firebaseio.com',\n  projectId: 'registringsapp',\n  storageBucket: 'registringsapp.appspot.com',\n  messagingSenderId: '44658578047',\n  appId: '1:44658578047:web:156ed57e2919a75847654a',\n  measurementId: 'G-GDBQTZL2DE',\n};\n\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire;\n","/*eslint-disable*/\nimport React from 'react';\nimport fire from '../../config/fire';\nimport { SendMail } from '../../config/mail';\nimport Loader from 'react-loader-spinner';\nconst { promisify } = require('util');\n\nimport Logo from '../../assets/img/HSB_sponsorlogo.png';\n\nvar QRCode = require('qrcode.react');\n\nimport {\n  Button,\n  Input,\n  GridList,\n  TextField,\n  Grid,\n  GridListTile,\n  GridContainer,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Icon,\n} from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core';\nimport './MainViewStyles.css';\n\nexport const MainView = () => {\n  // Local STATE\n  const [inputList, setInputList] = React.useState([\n    {\n      name: '',\n      phone: '',\n      email: '',\n      time: '',\n      status: 0,\n    },\n  ]);\n  const [alertSucess, setalertSucess] = React.useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const [enableButton, setenableButton] = React.useState(true);\n  const [storageStatus, setstorageStatus] = React.useState('');\n  const [ExternalStorageStatus, setExternalStorageStatus] = React.useState('');\n  const [time, setTime] = React.useState('07:00');\n  const [simpComfDia, setsimpComfDia] = React.useState(false);\n  const [qrLoader, setqrLoader] = React.useState(false);\n  // USE EFFECTS\n\n  React.useEffect(() => {\n    VerifyButton();\n    return () => {\n      setenableButton(true);\n    };\n  }, [inputList, checked]);\n  React.useEffect(() => {\n    StorageStatus();\n  });\n\n  React.useEffect(() => {\n    timeToList();\n  }, [time, inputList.length]);\n\n  // FUNCTIONS\n\n  const sleep = promisify(setTimeout);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  // TODO ADD LINK BACK TO HELGELANDEVENT/TIENDEBYTTE\n\n  // TODO MAIL HANDLER\n  //  TIDPSUNTK UTHEVD\n  // CORONA REGLER\n\n  const AlertBoxSuccess = (props) => {\n    return (\n      <div>\n        <Dialog\n          open={alertSucess}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <h3 className=\"PrimaryTextColor\">Bekreft registrering</h3>\n\n          <h3 className=\"PrimaryTextColor\" style={{ color: 'red' }}>\n            {time}\n          </h3>\n\n          <DialogContent>\n            <List>\n              {inputList.map((x, i) => {\n                var t = x['name'] + ' - ' + x['phone'];\n                return (\n                  <ListItem key={i}>\n                    <ListItemIcon>{i + 1}</ListItemIcon>\n                    <ListItemText primary={t} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </DialogContent>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <DialogActions>\n              <Button\n                onClick={AlertBoxSuccessHandler}\n                variant=\"outlined\"\n                color=\"secondary\"\n              >\n                Avbryt\n              </Button>\n              <Button\n                onClick={dispatchToDatabase}\n                color=\"primary\"\n                variant=\"outlined\"\n                autoFocus\n              >\n                Bekreft\n              </Button>\n            </DialogActions>\n          </Grid>\n        </Dialog>\n      </div>\n    );\n  };\n\n  const AlertBoxSuccessHandler = () => {\n    if (alertSucess) {\n      setalertSucess(false);\n    } else {\n      setalertSucess(true);\n    }\n  };\n\n  const dispatchToDatabase = () => {\n    try {\n      inputList.forEach((e) => {\n        fire\n          .firestore()\n          .collection('HEV')\n          .doc('tiendebyttefrokost2020')\n          .collection(time)\n          .doc(e['name'])\n          .set({\n            name: e['name'],\n            phone: e['phone'],\n            email: e['email'],\n            time: time,\n            status: 0,\n          });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      SendMail(inputList);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setalertSucess(false);\n    sleep(2000);\n    setsimpComfDia(true);\n  };\n\n  const SimpleConfirmationDialog = () => {\n    // TODO Beskjed om at kvittering og Qr code kommer på epost.\n    // LEGGE VED QR KODE I DIALOG BOKS\n\n    // sleep(2000).then(() => {\n    //   setqrLoader(false);\n    // });\n    return (\n      <Dialog aria-labelledby=\"simple-dialog-title\" open={simpComfDia}>\n        <h2\n          className=\"PrimaryTextColor\"\n          style={{ marginLeft: 10, marginRight: 10 }}\n        >\n          Registrering vellykket !<br />\n          Din billett kommer på E-post.\n          <br /> Om ikke billeten skulle komme, sjekk søppepost !\n        </h2>\n        <Icon\n          style={{\n            fontSize: 70,\n            color: '#4BB543',\n            margin: 'auto',\n            marginTop: 20,\n            marginBottom: 40,\n          }}\n        >\n          done\n        </Icon>\n\n        <Button\n          variant=\"contained\"\n          style={{ margin: 10, backgroundColor: '#4BB543' }}\n          onClick={sucessHandler}\n        >\n          Hurra !\n        </Button>\n      </Dialog>\n    );\n  };\n\n  const sucessHandler = () => {\n    setChecked(false);\n    setsimpComfDia(false);\n    setInputList([{ name: '', phone: '', email: '', time: '', status: 0 }]);\n    AlertBoxSuccessHandler;\n    window.location.replace('https://helgelandevent.no/tiendebytte/program/');\n  };\n\n  const StorageStatus = () => {\n    var max = 150;\n    try {\n      fire\n        .firestore()\n        .collection('HEV')\n        .doc('tiendebyttefrokost2020')\n        .collection(time)\n        .onSnapshot((documentSnapshot) => {\n          var size = documentSnapshot.size ? documentSnapshot.size : 0;\n          var left = max - size - inputList.length;\n          var leftExt = max - size;\n          setstorageStatus(left);\n          setExternalStorageStatus(leftExt);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const confirmRegistration = () => {\n    // TODO BEKLAGER DENNE BORDSETTINGEN ER FULL, PRØV ET ANNET KLOKKESLETT\n    setalertSucess(true);\n  };\n\n  // handle input change\n  const handleInputChange = (e, index, targ) => {\n    const list = [...inputList];\n    if (targ == 'phone') {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === '' || re.test(event.target.value)) {\n        list[index][targ] = e.target.value;\n        setInputList(list);\n      }\n    } else {\n      list[index][targ] = e.target.value;\n      setInputList(list);\n    }\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    // ENDRET SPLICE FRA splice(index, 1) til splice(-1, 1).\n    // DETTE FOR Å FJERNE SISTE ELEMENT AV LISTEN\n    list.splice(-1, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([\n      ...inputList,\n      { name: '', phone: '', email: '', time: '', status: 0 },\n    ]);\n  };\n\n  const VerifyButton = () => {\n    var i = 0;\n    var il = 0;\n    inputList.forEach((element) => {\n      il += 1;\n      if (\n        !element['name'] == '' &&\n        !element['phone'] == '' &&\n        !element['email'] == '' &&\n        element['email'].includes('@')\n      ) {\n        i += 1;\n      }\n    });\n    if (i == il && checked && storageStatus > 0) {\n      setenableButton(false);\n    }\n  };\n\n  const timeHandler = (e) => {\n    setTime(e.target.value);\n  };\n\n  const timeToList = () => {\n    const list = [...inputList];\n    list.forEach((element, i) => {\n      list[i]['time'] = time;\n      setInputList(list);\n    });\n  };\n\n  const retHandler = () => {\n    window.open('uploads/Personvernerklæring.pdf');\n  };\n\n  return (\n    <div className=\"BillBord\">\n      <SimpleConfirmationDialog />\n      <AlertBoxSuccess color={'sucess'} string={'Bekreft'} />\n\n      <Grid container justify=\"space-evenly\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <h1\n            className=\"headerText PrimaryTextColor\"\n            style={{ marginLeft: 10, marginRight: 10 }}\n          >\n            Tiendebyttefrokost\n          </h1>\n          <h4 className=\"PrimaryTextColor\">15.september 2020</h4>\n        </Grid>\n      </Grid>\n\n      {/* SEKSJON !!! */}\n\n      <div>\n        {inputList.map((x, i) => {\n          return (\n            <Grid\n              key={i}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={12} sm={12} md={4}>\n                <TextField\n                  color=\"secondary\"\n                  value={x.name}\n                  onChange={(e) => handleInputChange(e, i, 'name')}\n                  label=\"Navn\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={4}>\n                <TextField\n                  color=\"secondary\"\n                  value={x.phone}\n                  onChange={(e) => handleInputChange(e, i, 'phone')}\n                  label=\"Telefon\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={4}>\n                <TextField\n                  color=\"secondary\"\n                  label=\"E-mail\"\n                  value={x.email}\n                  onChange={(e) => handleInputChange(e, i, 'email')}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} style={{ marginTop: 40 }}>\n                {inputList.length !== 1 && inputList.length - 1 === i && (\n                  <Button\n                    size=\"small\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={handleRemoveClick}\n                  >\n                    <Icon>remove</Icon>\n                    fjern\n                  </Button>\n                )}\n                {inputList.length - 1 === i &&\n                  inputList.length < 8 &&\n                  !storageStatus == 0 && (\n                    <Button\n                      style={{ marginLeft: 5 }}\n                      size=\"small\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleAddClick}\n                    >\n                      <Icon>add</Icon>\n                      Legg til deltaker\n                    </Button>\n                  )}\n              </Grid>\n            </Grid>\n          );\n        })}\n      </div>\n      <Grid container justify=\"space-evenly\" alignItems=\"center\">\n        <Grid item xs={12} style={{ marginTop: 30, color: 'white' }}>\n          <InputLabel id=\"simple-select-label\" style={{ fontSize: '25px' }}>\n            Tidspunkt\n          </InputLabel>\n          <Select\n            labelId=\"simple-select-label\"\n            id=\"simple-select\"\n            value={time}\n            onChange={timeHandler}\n            style={{ fontSize: '25px', color: 'red' }}\n          >\n            <MenuItem value={'07:00'}>07:00</MenuItem>\n            <MenuItem value={'08:00'}>08:00</MenuItem>\n            <MenuItem value={'09:00'}>09:00</MenuItem>\n            <MenuItem value={'10:00'}>10:00</MenuItem>\n            <MenuItem value={'11:00'}>11:00</MenuItem>\n          </Select>\n        </Grid>\n      </Grid>\n\n      {/* SEKSJON !!! */}\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item style={{ marginTop: 20 }}>\n          <Button\n            variant=\"outlined\"\n            style={{ backgroundColor: 'rgba(233,244,244,.7)' }}\n            onClick={retHandler}\n          >\n            Retningslinjer\n          </Button>\n        </Grid>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Checkbox\n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n          </Grid>\n          <Grid item>\n            <h4 className=\"PrimaryTextColor\" style={{ flex: 'wrap' }}>\n              Bekreft at du har lest retningslinjene før bestilling\n            </h4>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* SEKSJON !!! */}\n\n      <Grid item xs>\n        <h2\n          className=\"PrimaryTextColor\"\n          style={{ textAlign: 'center', flex: 'wrap' }}\n        >\n          Tilgjengelige biletter : {storageStatus}\n        </h2>\n      </Grid>\n\n      {/* SEKSJON !!! */}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n        style={{ marginTop: 40, marginBottom: 40 }}\n      >\n        {ExternalStorageStatus > 0 ? (\n          <Button\n            disabled={enableButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={confirmRegistration}\n          >\n            Registrer\n          </Button>\n        ) : (\n          <h2 style={{ color: 'red' }}>\n            Frokost med servering {time} er fullbooket!\n            <br />\n            Prøv et annet tidspunkt.\n          </h2>\n        )}\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item style={{ marginBottom: 40 }}>\n          <img src={Logo} alt=\"hsb logo\" />\n        </Grid>\n      </Grid>\n\n      {/* SEKSJON !!! */}\n    </div>\n  );\n};\n","// import React from 'react';\nimport axios from 'axios';\n\nconst auth = '968da4e7-a366-41d6-871d-79a0fc987fff';\nconst url = `/api`;\nexport const SendMail = (list) => {\n  axios\n    .post(url, list, {\n      headers: {\n        Authorization: auth,\n      },\n    })\n    .then((res) => {\n      console.log(res);\n    });\n};\n","import React from 'react';\nimport './App.css';\nimport { MainView } from './Views/MainView/MainView';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <MainView />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/HSB_sponsorlogo.cec9d786.png\";"],"sourceRoot":""}